---
server: shiny
filters: [surveydown]
---

```{r}
#| context: setup
#| echo: false
#| warning: false
#| message: false

################
# Installation #
################

# Run this in your R Console to install the latest version of the package:
# remotes::install_github("surveydown-dev/surveydown", force = TRUE)

# Run this to install or update the Quarto extension to the latest version:
# surveydown::sd_update_extension()

#################
# Load packages #
#################

# Load the package
library(surveydown)
library(dplyr)
library(ggplot2)

# Run initial setup function (essential - do not delete)
sd_setup()

##################
# Database setup #
##################

# surveydown stores data on a database that you define at https://supabase.com/
# To connect to a database, update the sd_database() function with details
# from your supabase database. For this demo, we set ignore = TRUE, which will
# ignore the settings and won't attempt to connect to the database. This is
# helpful for local testing if you don't want to record testing data in the
# database table. See the documentation for details:
# https://surveydown.org/store-data

db <- sd_database(
  host   = "",
  dbname = "",
  port   = "",
  user   = "",
  table  = "",
  ignore = TRUE
)
```

::: {#welcome .sd-page}

# Demo survey of reactive plot

::: {.callout-note}
This is a demo survey showcasing the functionality of <a href="https://surveydown.org" target="_blank">surveydown</a>. It doesn't collect any data.

The GitHub repo of this demo can be accessed <a href="https://github.com/surveydown-dev/demo-reactive-plot" target="_blank">here</a>.
:::

Here is a basic "multiple choice" question. The results will be displayed on the next page, showing both the choice you made as well as a summary of all the choices made by other participants.

```{r}
sd_question(
  type  = 'mc',
  id    = 'penguins',
  label = "Which type of penguin do you like the best?",
  option = c(
    'Ad√©lie'    = 'adelie',
    'Chinstrap' = 'chinstrap',
    'Gentoo'    = 'gentoo'
  )
)

sd_next(next_page = 'results')
```

:::

::: {#results .sd-page}

You chose: **`r sd_output("penguins", type = "value")`**

Summary of what everyone else has chosen:

```{r}
plotOutput('penguin_plot')
```

:::

```{r}
#| context: server

################
# config setup #
################

# Use the sd_config() function to customize features in your survey, like
# logic to conditionally display questions or skip to pages based on responses
# to skip other questions in your survey. See documentation for details at
# https://surveydown.org/config

config <- sd_config()

###################################
# Get reactive data and make plot #
###################################

data <- sd_get_data(db, refresh_interval = 5) # Every 5 sec (default)

# Render the plot
output$penguin_plot <- renderPlot({
  data() |> # Note the () here, as this is a reactive function
    count(penguins) |>
    mutate(penguins = ifelse(penguins == '', 'No response', penguins)) |>
    ggplot() +
    geom_col(aes(x = n, y = reorder(penguins, n)), width = 0.7) +
    theme_minimal() +
    labs(x = "Count", y = "Penguin Type", title = "Penguin Count")
})

####################################
# Don't change anything below here #
####################################

# The sd_server function initiates your survey - don't change this

sd_server(
  input   = input,
  output  = output,
  session = session,
  config  = config,
  db      = db
)
```
